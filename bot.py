import os
import asyncio
from flask import Flask, request
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")
BASE_URL = os.getenv("BASE_URL")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ URL
if not TOKEN or not BASE_URL:
    raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –∏ BASE_URL –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")

# –°–æ–∑–¥–∞—ë–º Flask
app = Flask(__name__)

# –°–æ–∑–¥–∞—ë–º Telegram Application
application = Application.builder().token(TOKEN).build()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø CyberGenius ü§ñ –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å!")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handler
application.add_handler(CommandHandler("start", start))

# Webhook endpoint ‚Äî –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ PTB-safe –º–µ—Ç–æ–¥
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    try:
        update = Update.de_json(request.get_json(force=True), application.bot)
        application.create_task(application.process_update(update))  # üí° –í–æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ webhook: {e}")
    return "OK", 200

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook –¥–æ –∑–∞–ø—É—Å–∫–∞ Flask
async def setup():
    await application.initialize()
    webhook_url = f"{BASE_URL}/{TOKEN}"
    await application.bot.set_webhook(url=webhook_url)
    print(f"[INFO] Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

if __name__ == "__main__":
    asyncio.run(setup())
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)))
