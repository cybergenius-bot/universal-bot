import os
import logging
from contextlib import asynccontextmanager
from fastapi import FastAPI, Request, Response
from telegram import Update, Bot
from telegram.ext import Application, MessageHandler, CommandHandler, filters


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
level=logging.INFO,
format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ URL
TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")


if not TOKEN:
raise ValueError("TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
if not WEBHOOK_URL:
raise ValueError("WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")


# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot = Bot(token=TOKEN)
application = Application.builder().token(TOKEN).build()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def start_command(update: Update, context):
user = update.effective_user
welcome_text = f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! \U0001F44B\n\n–Ø —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç. –ö–∞–∫ –¥–µ–ª–∞?"
await update.message.reply_text(welcome_text)
logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


async def help_command(update: Update, context):
help_text = """
ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:


/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞


–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É!
"""
await update.message.reply_text(help_text)


async def status_command(update: Update, context):
await update.message.reply_text("\u2705 –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!")


async def handle_message(update: Update, context):
user = update.effective_user
message_text = update.message.text
logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.id} ({user.username}): {message_text}")
if "–ø—Ä–∏–≤–µ—Ç" in message_text.lower():
response = f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üòä"
elif "–∫–∞–∫ –¥–µ–ª–∞" in message_text.lower():
response = "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è –∫–∞–∫?"
elif "—Å–ø–∞—Å–∏–±–æ" in message_text.lower():
response = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –ø–æ–º–æ—á—å! üòä"
else:
response = f"–ü–æ–ª—É—á–∏–ª —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message_text}'\n–û—Ç–ø—Ä–∞–≤—å /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."


await update.message.reply_text(response)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
application.add_handler(CommandHandler("start", start_command))
application.add_handler(CommandHandler("help", help_command))
