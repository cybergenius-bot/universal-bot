import os
import asyncio
import logging
from flask import Flask, request
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")

# –°–æ–∑–¥–∞–Ω–∏–µ Telegram Application
application = ApplicationBuilder().token(BOT_TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∏ —É–∂–µ —Ä–∞–±–æ—Ç–∞—é üî•")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä
application.add_handler(CommandHandler("start", start))

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async def init_bot():
    await application.initialize()
    await application.start()
    await application.bot.set_webhook(url=WEBHOOK_URL)
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö Webhook-–∑–∞–ø—Ä–æ—Å–æ–≤
@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), application.bot)
    asyncio.run(application.process_update(update))
    return "OK"

# –ó–∞–ø—É—Å–∫–∞–µ–º init_bot –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –∫ Flask
@app.before_first_request
def before_first_request():
    asyncio.run(init_bot())
