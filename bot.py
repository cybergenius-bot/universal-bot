import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from config import TELEGRAM_TOKEN, TARIFFS, OPENAI_API_KEY, OPENAI_MODEL
from db import get_user, decrement_messages, has_active_subscription
from openai import AsyncOpenAI
import os


openai_client = AsyncOpenAI(api_key=OPENAI_API_KEY)


logging.basicConfig(level=logging.INFO)


# Handlers
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
user = await get_user(update.effective_user.id)
await update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç! –£ —Ç–µ–±—è {user['messages_left']} —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ.")


async def invite(update: Update, context: ContextTypes.DEFAULT_TYPE):
bot_username = (await context.bot.get_me()).username
link = f"https://t.me/{bot_username}?start={update.effective_user.id}"
await update.message.reply_text(f"üéÅ –ü–æ–¥–µ–ª–∏—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏:\n{link}")


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
print("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", update.message.text)
tg_id = update.effective_user.id
user = await get_user(tg_id)
subscribed = await has_active_subscription(tg_id)


if subscribed or user["messages_left"] > 0:
if not subscribed:
await decrement_messages(tg_id)


try:
completion = await openai_client.chat.completions.create(
model=OPENAI_MODEL,
messages=[
{"role": "system", "content": "–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –ø–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ."},
{"role": "user", "content": update.message.text}
],
temperature=0.7
)
reply = completion.choices[0].message.content
await update.message.reply_text(reply)
except Exception as e:
logging.exception("–û—à–∏–±–∫–∞ OpenAI")
await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GPT.")
else:
keyboard = [
[InlineKeyboardButton(f"üí° 20 –æ—Ç–≤–µ—Ç–æ–≤ - $10", callback_data="buy_start")],
[InlineKeyboardButton(f"üß† 200 –æ—Ç–≤–µ—Ç–æ–≤ - $30", callback_data="buy_standard")],
[InlineKeyboardButton(f"‚ôæÔ∏è –ë–µ–∑–ª–∏–º–∏—Ç - $50", callback_data="buy_premium")]
]
await update.message.reply_text("‚ùå –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è. –í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ:", reply_markup=InlineKeyboardMarkup(keyboard))


# Main with Webhook
def main():
app = Application.builder().token(TELEGRAM_TOKEN).build()


app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("invite", invite))
