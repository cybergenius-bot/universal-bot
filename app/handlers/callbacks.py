import logging
from telegram import Update
from telegram.ext import ContextTypes
from ..services.user_service import UserService
from ..services.state_service import state_service, UserState
from ..utils.keyboards import Keyboards

logger = logging.getLogger(__name__)


async def handle_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤"""
    query = update.callback_query
    await query.answer()
    
    data = query.data
    user = update.effective_user
    
    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–æ callback –¥–∞–Ω–Ω—ã–º
    if data == "stats":
        await show_user_stats(update, context)
    elif data == "settings":
        await show_settings_menu(update, context)
    elif data == "help":
        await show_help(update, context)
    elif data == "support":
        await start_support(update, context)
    elif data == "back_to_main":
        await show_main_menu(update, context)
    elif data.startswith("admin_"):
        await handle_admin_callback(update, context)
    else:
        await query.edit_message_text("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")


async def show_user_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    query = update.callback_query
    user = update.effective_user
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats_text = f"""
üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**

üë§ **–ü—Ä–æ—Ñ–∏–ª—å:**
‚Ä¢ ID: {user.id}
‚Ä¢ –ò–º—è: {user.first_name}
‚Ä¢ Username: @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

üìà **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: 42
‚Ä¢ –ö–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: 15
‚Ä¢ –î–Ω–µ–π —Å –Ω–∞–º–∏: 7

‚è∞ **–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** —Å–µ–π—á–∞—Å
    """
    
    await query.edit_message_text(
        stats_text,
        parse_mode='Markdown',
        reply_markup=Keyboards.main_menu()
    )


async def show_settings_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    query = update.callback_query
    
    await query.edit_message_text(
        "‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:",
        parse_mode='Markdown',
        reply_markup=Keyboards.settings_menu()
    )


async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    query = update.callback_query
    
    help_text = """
üìñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É**

**–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –¥–∞–Ω–Ω—ã–µ
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
‚Ä¢ üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞ - —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π

**–ù–∞–≤–∏–≥–∞—Ü–∏—è:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
‚Ä¢ –ö–æ–º–∞–Ω–¥—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å /
‚Ä¢ –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥

**–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?**
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!
    """
    
    await query.edit_message_text(
        help_text,
        parse_mode='Markdown',
        reply_markup=Keyboards.main_menu()
    )


async def start_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"""
    query = update.callback_query
    user = update.effective_user
    
    await state_service.set_state(user.id, UserState.WAITING_MESSAGE)
    
    await query.edit_message_text(
        "üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞**\n\n"
        "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å.\n"
        "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
        parse_mode='Markdown'
    )


async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    user = update.effective_user
    
    await state_service.set_state(user.id, UserState.IN_MENU)
    
    await query.edit_message_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\nüìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=Keyboards.main_menu()
    )


async def handle_admin_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö callback'–æ–≤"""
    query = update.callback_query
    user = update.effective_user
    data = query.data
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
    if not await UserService.is_admin(user.id):
        await query.edit_message_text("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
        return
    
    if data == "admin_users":
        await show_admin_users(update, context)
    elif data == "admin_stats":
        await show_admin_stats(update, context)
    elif data == "admin_broadcast":
        await start_broadcast(update, context)


async def show_admin_users(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–¥–º–∏–Ω)"""
    query = update.callback_query
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ –ë–î
    users_info = """
üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞**

üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 150
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è: 45
‚Ä¢ –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: 12
‚Ä¢ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: 2

üîù **–¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö:**
1. @user1 - 234 —Å–æ–æ–±—â–µ–Ω–∏—è
2. @user2 - 189 —Å–æ–æ–±—â–µ–Ω–∏–π
3. @user3 - 156 —Å–æ–æ–±—â–µ–Ω–∏–π
    """
    
    await query.edit_message_text(
        users_info,
        parse_mode='Markdown',
        reply_markup=Keyboards.admin_menu()
    )
